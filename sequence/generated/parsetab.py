
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CUBE DELAY EVAL_OP FACE FOR FUNCTION LED LEDSTRIP NUMBER OPP SQUARE VAR program : statement  program : statement program  statement : for\n        | expression ';'\n        | function  function : FUNCTION VAR '(' param ')' '{' program '}'  param : VAR\n        | VAR ',' param\n        |  use_function : VAR '(' call_data ')'  call_data : number\n        | number ',' call_data\n        |  assign : VAR '=' number  for : FOR '(' assign ';' eval ';' assign ')' '{' program '}'  expression : section\n        | pause\n        | use_function\n        | assign  calc : data OPP data  eval : data EVAL_OP data  number : data\n        | calc   data : NUMBER\n    | VAR  section : CUBE number  section : FACE number number section : SQUARE number number number  section : LEDSTRIP number number number number section : LED number number number number number pause : DELAY number "
    
_lr_action_items = {'FOR':([0,2,3,5,20,65,71,72,74,],[6,6,-3,-5,-4,6,-6,6,-15,]),'FUNCTION':([0,2,3,5,20,65,71,72,74,],[11,11,-3,-5,-4,11,-6,11,-15,]),'CUBE':([0,2,3,5,20,65,71,72,74,],[13,13,-3,-5,-4,13,-6,13,-15,]),'FACE':([0,2,3,5,20,65,71,72,74,],[14,14,-3,-5,-4,14,-6,14,-15,]),'SQUARE':([0,2,3,5,20,65,71,72,74,],[15,15,-3,-5,-4,15,-6,15,-15,]),'LEDSTRIP':([0,2,3,5,20,65,71,72,74,],[16,16,-3,-5,-4,16,-6,16,-15,]),'LED':([0,2,3,5,20,65,71,72,74,],[17,17,-3,-5,-4,17,-6,17,-15,]),'DELAY':([0,2,3,5,20,65,71,72,74,],[18,18,-3,-5,-4,18,-6,18,-15,]),'VAR':([0,2,3,5,11,13,14,15,16,17,18,20,21,23,24,26,27,28,29,30,31,32,33,37,41,43,44,45,46,50,51,53,54,57,61,62,63,65,71,72,74,],[12,12,-3,-5,22,29,29,29,29,29,29,-4,36,29,29,-22,-23,-24,-25,29,29,29,29,47,29,29,29,29,29,29,-20,29,29,47,29,36,29,12,-6,12,-15,]),'$end':([1,2,3,5,19,20,71,74,],[0,-1,-3,-5,-2,-4,-6,-15,]),'}':([2,3,5,19,20,69,71,73,74,],[-1,-3,-5,-2,-4,71,-6,74,-15,]),';':([4,7,8,9,10,25,26,27,28,29,34,35,40,42,49,51,52,55,60,66,68,],[20,-19,-16,-17,-18,-26,-22,-23,-24,-25,-31,46,-14,-27,-10,-20,-28,62,-29,-30,-21,]),'(':([6,12,22,],[21,23,37,]),'=':([12,36,],[24,24,]),'NUMBER':([13,14,15,16,17,18,23,24,26,27,28,29,30,31,32,33,41,43,44,45,46,50,51,53,54,61,63,],[28,28,28,28,28,28,28,28,-22,-23,-24,-25,28,28,28,28,28,28,28,28,28,28,-20,28,28,28,28,]),')':([23,26,27,28,29,37,38,39,40,47,48,50,51,57,59,64,67,],[-13,-22,-23,-24,-25,-9,49,-11,-14,-7,58,-13,-20,-9,-12,-8,70,]),',':([26,27,28,29,39,47,51,],[-22,-23,-24,-25,50,57,-20,]),'OPP':([26,28,29,],[41,-24,-25,]),'EVAL_OP':([28,29,56,],[-24,-25,63,]),'{':([58,70,],[65,72,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,2,65,72,],[1,19,69,73,]),'statement':([0,2,65,72,],[2,2,2,2,]),'for':([0,2,65,72,],[3,3,3,3,]),'expression':([0,2,65,72,],[4,4,4,4,]),'function':([0,2,65,72,],[5,5,5,5,]),'assign':([0,2,21,62,65,72,],[7,7,35,67,7,7,]),'section':([0,2,65,72,],[8,8,8,8,]),'pause':([0,2,65,72,],[9,9,9,9,]),'use_function':([0,2,65,72,],[10,10,10,10,]),'number':([13,14,15,16,17,18,23,24,30,31,32,33,43,44,45,50,53,54,61,],[25,30,31,32,33,34,39,40,42,43,44,45,52,53,54,39,60,61,66,]),'data':([13,14,15,16,17,18,23,24,30,31,32,33,41,43,44,45,46,50,53,54,61,63,],[26,26,26,26,26,26,26,26,26,26,26,26,51,26,26,26,56,26,26,26,26,68,]),'calc':([13,14,15,16,17,18,23,24,30,31,32,33,43,44,45,50,53,54,61,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'call_data':([23,50,],[38,59,]),'param':([37,57,],[48,64,]),'eval':([46,],[55,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement','program',1,'p_programme_statement','parser_data.py',10),
  ('program -> statement program','program',2,'p_programme_recursif','parser_data.py',15),
  ('statement -> for','statement',1,'p_statement','parser_data.py',20),
  ('statement -> expression ;','statement',2,'p_statement','parser_data.py',21),
  ('statement -> function','statement',1,'p_statement','parser_data.py',22),
  ('function -> FUNCTION VAR ( param ) { program }','function',8,'p_function','parser_data.py',27),
  ('param -> VAR','param',1,'p_param','parser_data.py',32),
  ('param -> VAR , param','param',3,'p_param','parser_data.py',33),
  ('param -> <empty>','param',0,'p_param','parser_data.py',34),
  ('use_function -> VAR ( call_data )','use_function',4,'p_use_function','parser_data.py',44),
  ('call_data -> number','call_data',1,'p_call_data','parser_data.py',49),
  ('call_data -> number , call_data','call_data',3,'p_call_data','parser_data.py',50),
  ('call_data -> <empty>','call_data',0,'p_call_data','parser_data.py',51),
  ('assign -> VAR = number','assign',3,'p_assign','parser_data.py',61),
  ('for -> FOR ( assign ; eval ; assign ) { program }','for',11,'p_for','parser_data.py',66),
  ('expression -> section','expression',1,'p_expression','parser_data.py',71),
  ('expression -> pause','expression',1,'p_expression','parser_data.py',72),
  ('expression -> use_function','expression',1,'p_expression','parser_data.py',73),
  ('expression -> assign','expression',1,'p_expression','parser_data.py',74),
  ('calc -> data OPP data','calc',3,'p_calc','parser_data.py',79),
  ('eval -> data EVAL_OP data','eval',3,'p_eval','parser_data.py',84),
  ('number -> data','number',1,'p_number','parser_data.py',89),
  ('number -> calc','number',1,'p_number','parser_data.py',90),
  ('data -> NUMBER','data',1,'p_data','parser_data.py',95),
  ('data -> VAR','data',1,'p_data','parser_data.py',96),
  ('section -> CUBE number','section',2,'p_section_cube','parser_data.py',101),
  ('section -> FACE number number','section',3,'p_section_face','parser_data.py',106),
  ('section -> SQUARE number number number','section',4,'p_section_square','parser_data.py',111),
  ('section -> LEDSTRIP number number number number','section',5,'p_section_ledstrip','parser_data.py',116),
  ('section -> LED number number number number number','section',6,'p_section_led','parser_data.py',121),
  ('pause -> DELAY number','pause',2,'p_pause','parser_data.py',126),
]
