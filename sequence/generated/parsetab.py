
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "CUBE DELAY EVAL_OP FACE FOR LED LEDSTRIP NUMBER OPP SQUARE VAR programme : statement  programme : statement programme  statement : for\n        | expression ';'  for : FOR '(' assign ';' eval ';' assign ')' '{' programme '}'  expression : section\n        | pause  assign : VAR '=' calc\n        | VAR '=' number  calc : number OPP number  eval : number EVAL_OP number  number : NUMBER\n        | VAR  section : CUBE number  section : FACE number number section : SQUARE number number number  section : LEDSTRIP number number number number section : LED number number number number number pause : DELAY number "
    
_lr_action_items = {'FOR':([0,2,3,15,50,52,],[5,5,-3,-4,5,-5,]),'CUBE':([0,2,3,15,50,52,],[8,8,-3,-4,8,-5,]),'FACE':([0,2,3,15,50,52,],[9,9,-3,-4,9,-5,]),'SQUARE':([0,2,3,15,50,52,],[10,10,-3,-4,10,-5,]),'LEDSTRIP':([0,2,3,15,50,52,],[11,11,-3,-4,11,-5,]),'LED':([0,2,3,15,50,52,],[12,12,-3,-4,12,-5,]),'DELAY':([0,2,3,15,50,52,],[13,13,-3,-4,13,-5,]),'$end':([1,2,3,14,15,52,],[0,-1,-3,-2,-4,-5,]),'}':([2,3,14,15,51,52,],[-1,-3,-2,-4,52,-5,]),';':([4,6,7,17,18,19,24,25,27,33,36,38,39,40,45,47,48,],[15,-6,-7,-14,-12,-13,-19,31,-15,-16,42,-8,-9,-17,-18,-11,-10,]),'(':([5,],[16,]),'NUMBER':([8,9,10,11,12,13,18,19,20,21,22,23,28,29,30,31,32,34,35,41,43,44,],[18,18,18,18,18,18,-12,-13,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'VAR':([8,9,10,11,12,13,16,18,19,20,21,22,23,28,29,30,31,32,34,35,41,42,43,44,],[19,19,19,19,19,19,26,-12,-13,19,19,19,19,19,19,19,19,19,19,19,19,26,19,19,]),'EVAL_OP':([18,19,37,],[-12,-13,43,]),'OPP':([18,19,39,],[-12,-13,44,]),')':([18,19,38,39,46,48,],[-12,-13,-8,-9,49,-10,]),'=':([26,],[32,]),'{':([49,],[50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programme':([0,2,50,],[1,14,51,]),'statement':([0,2,50,],[2,2,2,]),'for':([0,2,50,],[3,3,3,]),'expression':([0,2,50,],[4,4,4,]),'section':([0,2,50,],[6,6,6,]),'pause':([0,2,50,],[7,7,7,]),'number':([8,9,10,11,12,13,20,21,22,23,28,29,30,31,32,34,35,41,43,44,],[17,20,21,22,23,24,27,28,29,30,33,34,35,37,39,40,41,45,47,48,]),'assign':([16,42,],[25,46,]),'eval':([31,],[36,]),'calc':([32,],[38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programme","S'",1,None,None,None),
  ('programme -> statement','programme',1,'p_programme_statement','parser_data.py',11),
  ('programme -> statement programme','programme',2,'p_programme_recursif','parser_data.py',16),
  ('statement -> for','statement',1,'p_statement','parser_data.py',21),
  ('statement -> expression ;','statement',2,'p_statement','parser_data.py',22),
  ('for -> FOR ( assign ; eval ; assign ) { programme }','for',11,'p_for','parser_data.py',27),
  ('expression -> section','expression',1,'p_expression','parser_data.py',32),
  ('expression -> pause','expression',1,'p_expression','parser_data.py',33),
  ('assign -> VAR = calc','assign',3,'p_assign','parser_data.py',38),
  ('assign -> VAR = number','assign',3,'p_assign','parser_data.py',39),
  ('calc -> number OPP number','calc',3,'p_calc_calc','parser_data.py',44),
  ('eval -> number EVAL_OP number','eval',3,'p_eval','parser_data.py',49),
  ('number -> NUMBER','number',1,'p_number','parser_data.py',54),
  ('number -> VAR','number',1,'p_number','parser_data.py',55),
  ('section -> CUBE number','section',2,'p_section_cube','parser_data.py',60),
  ('section -> FACE number number','section',3,'p_section_face','parser_data.py',65),
  ('section -> SQUARE number number number','section',4,'p_section_square','parser_data.py',70),
  ('section -> LEDSTRIP number number number number','section',5,'p_section_ledstrip','parser_data.py',75),
  ('section -> LED number number number number number','section',6,'p_section_led','parser_data.py',80),
  ('pause -> DELAY number','pause',2,'p_pause','parser_data.py',85),
]
